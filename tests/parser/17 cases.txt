case (x => 1) (y => 1)
-
CasesF [FunctionF (ParamIdentF "x") Nothing (LitF (LitInt 1)),FunctionF (ParamIdentF "y") Nothing (LitF (LitInt 1))]
=
case (x => 1)
-
CasesF [FunctionF (ParamIdentF "x") Nothing (LitF (LitInt 1))]
=
case (\x | (1) => 1)
-
CasesF [FunctionF (ParamIdentF "x") (Just (LitF (LitInt 1))) (LitF (LitInt 1))]
=
case (\x => 1) (\y => 2)
-
CasesF [FunctionF (ParamIdentF "x") Nothing (LitF (LitInt 1)),FunctionF (ParamIdentF "y") Nothing (LitF (LitInt 2))]
=
foo = case
 x y => 2
 z => 2
-
RecordLabelF "foo" (CasesF [FunctionF (ParamIdentF "_a") Nothing (LetF (RecordF [RecordLabelF "x" (CallF (LabelAccessF "item1") (IdentF "_a")),RecordLabelF "y" (CallF (LabelAccessF "item2") (IdentF "_a"))]) (LitF (LitInt 2))),FunctionF (ParamIdentF "z") Nothing (LitF (LitInt 2))])
=
ffi eqInt : (Int, Int) => Bool
foo = case
 x y | (eqInt x 1) => 2
 z => 2
-
RecordF [FfiF "eqInt" (TypeFunc (TypeRecord [TypeIdent "Int",TypeIdent "Int"]) (TypeIdent "Bool")),RecordLabelF "foo" (CasesF [FunctionF (ParamIdentF "_a") (Just (LetF (RecordF [RecordLabelF "x" (CallF (LabelAccessF "item1") (IdentF "_a")),RecordLabelF "y" (CallF (LabelAccessF "item2") (IdentF "_a"))]) (CallF (IdentF "eqInt") (RecordF [IdentF "x",LitF (LitInt 1)])))) (LetF (RecordF [RecordLabelF "x" (CallF (LabelAccessF "item1") (IdentF "_a")),RecordLabelF "y" (CallF (LabelAccessF "item2") (IdentF "_a"))]) (LitF (LitInt 2))),FunctionF (ParamIdentF "z") Nothing (LitF (LitInt 2))])]