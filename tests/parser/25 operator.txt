infixl + 6 addInt
-
Stmt StmtOperator
=
ffi add : (Int, Int) => Int
infixl + 6 add
1 + 2
-
Record [Ffi "add" (TypeFunc (TypeRecord [TypeIdent "Int",TypeIdent "Int"]) (TypeIdent "Int")),Stmt StmtOperator,Call (Ident "add") (Record [Lit (LitInt 1),Lit (LitInt 2)])]
=
ffi mul : (Int, Int) => Int
ffi add : (Int, Int) => Int
infixl + 6 add
infixl * 7 mul
1 + 2 * 3
-
Record [Ffi "mul" (TypeFunc (TypeRecord [TypeIdent "Int",TypeIdent "Int"]) (TypeIdent "Int")),Ffi "add" (TypeFunc (TypeRecord [TypeIdent "Int",TypeIdent "Int"]) (TypeIdent "Int")),Stmt StmtOperator,Stmt StmtOperator,Call (Ident "add") (Record [Lit (LitInt 1),Call (Ident "mul") (Record [Lit (LitInt 2),Lit (LitInt 3)])])]
=
(1) # foo
-
Call (Ident "foo") (Lit (LitInt 1))
=
infixl + 6 add
infixl ++ 5 add
1 ++ 2
-
Record [Stmt StmtOperator,Stmt StmtOperator,Call (Ident "add") (Record [Lit (LitInt 1),Lit (LitInt 2)])]
=
infix == 4 eq

y = x == 2
-
Record [Stmt StmtOperator,RecordLabel "y" (Call (Ident "eq") (Record [Ident "x",Lit (LitInt 2)]))]