x # case (x => 2)
-
Call (Cases [Function (ParamIdent "x") Nothing (Lit (LitInt 2))]) (Ident "x")
=
foo (bar [1 2 3] # qwe)
-
Call (Ident "foo") (Call (Ident "qwe") (Call (Ident "bar") (Array [Lit (LitInt 1),Lit (LitInt 2),Lit (LitInt 3)])))
=
1 , 2 # foo
-
Call (Ident "foo") (Record [Lit (LitInt 1),Lit (LitInt 2)])
=
foo $ bar qwe
-
Call (Ident "foo") (Call (Ident "bar") (Ident "qwe"))