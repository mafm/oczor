foo x
-
Call (Ident "foo") (Ident "x")
=
foo x y
-
Call (Ident "foo") (Record [Ident "x",Ident "y"])
=
foo (bar y)
-
Call (Ident "foo") (Call (Ident "bar") (Ident "y"))
=
foo (x = 1)
-
Call (Ident "foo") (RecordLabel "x" (Lit (LitInt 1)))
=
foo (x = 1) (y = 1)
-
Call (Ident "foo") (Record [RecordLabel "x" (Lit (LitInt 1)),RecordLabel "y" (Lit (LitInt 1))])
=
foo (x => x)
-
Call (Ident "foo") (Function (ParamIdent "x") Nothing (Ident "x"))
=
x | (foo x) => x
-
Function (ParamIdent "x") (Just (Call (Ident "foo") (Ident "x"))) (Ident "x")
=
foo case (x => x)
-
Call (Ident "foo") (Cases [Function (ParamIdent "x") Nothing (Ident "x")])