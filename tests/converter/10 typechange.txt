type Foo = Int
foo : Foo
foo = 1
bar = foo
-
Scope [Var "foo" (Lit (LitInt 1))] (Object [("foo",Ident "foo"),("bar",Ident "foo")])
=
type Foo a = a
foo : Foo Int
foo = 1
-
Object [("foo",Lit (LitInt 1))]
=
type Foo = Int
pureFoo : Int => Foo
pureFoo x = x
-
Object [("pureFoo",Function ["x"] [Return (Ident "x")])]