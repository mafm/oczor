type Foo a = foo : a
class show a: a => String
showFoo : Foo (a show <: a) => String
showFoo x = show x.foo
-
TypeLabel "showFoo" (TypeFunc (TypeApply (TypeIdent "Foo") [TypeConstraints [(TypeVar "a","show")] (TypeVar "a")]) (TypeIdent "String"))
=
type Foo a = foo : a
class show a: a => String
showFoo : Foo (a show <: a) => String
showFoo x = show x.foo
bar = showFoo (foo = 1)
-
(NoInstance (TypeIdent "Int") "show",(5,7,""))
=
type Foo a = foo : a
class show a: a => String
showFoo x = show x.foo
-
TypeLabel "showFoo" (TypeFunc (TypeRow (TypeVar "a") [TypeLabel "foo" (TypeConstraints [(TypeVar "b","show")] (TypeVar "b"))]) (TypeIdent "String"))