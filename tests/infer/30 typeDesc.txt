type Foo = Int
x : Foo
x = 1
-
TypeLabel "x" (TypeIdent "Foo")
=
type Foo =
 foo : Int
 bar : Int
x : Foo
x = ((foo = 1), bar = 1)
-
TypeLabel "x" (TypeIdent "Foo")
=
type Foo = y : Int
x : Foo
x = y = 1
-
TypeLabel "x" (TypeIdent "Foo")
=
type False = Unit
ffi fls : False
ffi bool : False => Int
bool fls
-
TypeIdent "Int"
=
type Foo a = foo : a

x : Foo Int = foo = 1
y : Foo String = foo = "foo"
-
TypeLabel "y" (TypeApply (TypeIdent "Foo") [TypeIdent "String"])